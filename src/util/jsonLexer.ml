# 1 "jsonLexer.mll"
 
  open Big_int
  open Json
  open JsonParser
  

# 9 "jsonLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\022\000\078\000\100\000\001\000\002\000\244\255\245\255\
    \246\255\247\255\248\255\249\255\000\000\000\000\000\000\017\000\
    \255\255\000\000\004\000\254\255\013\000\253\255\001\000\002\000\
    \252\255\000\000\000\000\003\000\251\255\001\000\003\000\250\255\
    \243\255\032\000\088\000";
  Lexing.lex_backtrk = 
   "\013\000\255\255\013\000\013\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\013\000\255\255";
  Lexing.lex_default = 
   "\255\255\255\255\255\255\255\255\004\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\017\000\018\000\000\000\255\255\000\000\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \000\000\255\255\255\255";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\016\000\016\000\000\000\000\000\016\000\019\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \016\000\000\000\005\000\000\000\032\000\000\000\000\000\004\000\
    \032\000\000\000\020\000\000\000\011\000\000\000\002\000\015\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\010\000\017\000\021\000\000\000\000\000\000\000\
    \018\000\034\000\000\000\034\000\000\000\001\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\000\000\007\000\000\000\006\000\000\000\000\000\
    \000\000\025\000\000\000\000\000\000\000\001\000\013\000\024\000\
    \028\000\000\000\000\000\000\000\026\000\030\000\012\000\031\000\
    \000\000\000\000\022\000\027\000\014\000\029\000\023\000\000\000\
    \000\000\000\000\000\000\009\000\000\000\008\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\002\000\001\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\018\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\005\000\255\255\255\255\000\000\
    \004\000\255\255\017\000\255\255\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\015\000\020\000\255\255\255\255\255\255\
    \015\000\001\000\255\255\001\000\255\255\000\000\001\000\001\000\
    \001\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
    \033\000\033\000\033\000\033\000\033\000\033\000\033\000\033\000\
    \033\000\033\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\013\000\255\255\255\255\255\255\000\000\000\000\023\000\
    \027\000\255\255\255\255\255\255\025\000\029\000\000\000\030\000\
    \255\255\255\255\014\000\026\000\000\000\012\000\022\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
    \034\000\034\000\003\000\002\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\002\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\003\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \017\000\004\000\005\000\255\255\018\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 9 "jsonLexer.mll"
                            ( token lexbuf )
# 142 "jsonLexer.ml"

  | 1 ->
# 10 "jsonLexer.mll"
                            ( token lexbuf )
# 147 "jsonLexer.ml"

  | 2 ->
# 11 "jsonLexer.mll"
                            ( token lexbuf )
# 152 "jsonLexer.ml"

  | 3 ->
# 12 "jsonLexer.mll"
                            ( TRUE   )
# 157 "jsonLexer.ml"

  | 4 ->
# 13 "jsonLexer.mll"
                            ( FALSE  )
# 162 "jsonLexer.ml"

  | 5 ->
# 14 "jsonLexer.mll"
                            ( NULL   )
# 167 "jsonLexer.ml"

  | 6 ->
# 15 "jsonLexer.mll"
                            ( COMMA  )
# 172 "jsonLexer.ml"

  | 7 ->
# 16 "jsonLexer.mll"
                            ( COLON  )
# 177 "jsonLexer.ml"

  | 8 ->
# 17 "jsonLexer.mll"
                            ( LCURL  )
# 182 "jsonLexer.ml"

  | 9 ->
# 18 "jsonLexer.mll"
                            ( RCURL  )
# 187 "jsonLexer.ml"

  | 10 ->
# 19 "jsonLexer.mll"
                            ( LBRACK )
# 192 "jsonLexer.ml"

  | 11 ->
# 20 "jsonLexer.mll"
                            ( RBRACK )
# 197 "jsonLexer.ml"

  | 12 ->
# 22 "jsonLexer.mll"
      ( let str = Lexing.lexeme lexbuf in
        let sl  = String.length str in
        STRING (String.sub str 1 (sl-2))
      )
# 205 "jsonLexer.ml"

  | 13 ->
# 27 "jsonLexer.mll"
      ( NUMBER (big_int_of_string (Lexing.lexeme lexbuf)) )
# 210 "jsonLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

