diff --git a/src/util/htmldump.ml b/src/util/htmldump.ml
index 22e81ca..9db5d9a 100644
--- a/src/util/htmldump.ml
+++ b/src/util/htmldump.ml
@@ -16,7 +16,10 @@ let readFileLines filename =
 	List.rev !lines;;
 
 
-let htmlTemp_BasePartOne = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<head>\n  <title>%filename%</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n  <style type=\"text/css\">\n    <!--\n    html , body {\n      background-color: #FFFFFF;\n      margin: 0;\n      padding: 0;\n    }\n  \n    .mywindow \n    {\n        border: 1px solid #C0C0C0;\n        position: fixed;\n        overflow: hidden;\n        width: auto;\n        height: auto;\n        background-color: #F0F0F0;\n        overflow: hidden;\n    }\n  \n    .mywindow_header \n    {\n        background-color: #E0E0E0;\n        border-bottom: 1px solid #C0C0C0;\n        color: #4050A0;\n        font-family: Arial;\n        font-weight: bold;\n        font-size: 16px;\n        padding: 2px;\n    }\n  \n    .mywindow_content \n    {\n        overflow: scroll;\n        padding: 0px;\n        width: 0px;\n        height: 0px;\n    }\n  \n    #leftWindowContent\n    {\n      background-color: #F0F0F0;\n      padding: 0px;\n      margin-right: 0px;\n      font-size: 14px;\n      font-family: Arial,Monospace;     \n    }  \n \n    #codeWindowContent\n    {\n      background-color: #F8F8F8;\n    }\n        \n    #codeWindowContent a \n    {\n      text-decoration: none;\n      color: #000000;\n      font-weight: bold;\n    }\n        \n    #codeWindowContent a:hover \n    {\n      text-decoration: underline;\n      color: #0000C0;\n    }\n        \n    #codeWindowContent pre \n    {\n      padding: 0px;\n      margin: 0px;\n    }\n  \n    .linetype0\n    {\n      background-color: #F0F0F0;\n    }\n        \n    .linetype1\n    {\n      background-color: #F8F8F8;\n    }\n  \n    .cpp_datatype\n    {\n      color: blue;\n    }\n        \n    .cpp_keyword\n    {\n      color: blue;            \n    }\n\n    .cpp_preprocessor\n    {\n      color: purple;            \n    }\n        \n    .cpp_stringDQ\n    {\n      color: red;            \n    }\n        \n    .cpp_stringSQ\n    {\n      color: red;            \n    }\n        \n    .cpp_comment\n    {\n      color: Green;\n    }\n\n    .cpp_function\n    {\n    }\n\n    .cpp_function a\n    {\n      color: Green;\n      text-decoration: none;\n      font-weight: normal;\n    }\n    -->\n  </style>\n\n  <script type=\"text/javascript\">\n\n    var loadedPage = -1;\n    var requestedLine = 0;\n    var lineSelected = 0;\n    var functionSelected = 0;\n    var dynamicLoading = false;\n\n    // Try to create and initialize a HttpObject\n    var xmlHttpObject = false;\n\n    if (typeof XMLHttpRequest != 'undefined') \n    {\n        xmlHttpObject = new XMLHttpRequest();\n    }\n    if (!xmlHttpObject) \n    {\n        try \n        {\n            xmlHttpObject = new ActiveXObject(\"Msxml2.XMLHTTP\");\n        }\n        catch(e) \n        {\n            try \n            {\n                xmlHttpObject = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n            catch(e) \n            {\n                xmlHttpObject = null;\n            }\n        }\n    }\n\n    function htmlHandleContent()\n    {\n        if (xmlHttpObject.readyState == 4)\n        {\n            document.getElementById('dynamicanalysis').innerHTML = xmlHttpObject.responseText;\n            MakeLineVisible(requestedLine);\n         }\n    }\n\n    function htmlLoadContent(i)\n    {\n        xmlHttpObject.open('get','%shortfilename%_data/analysis'+i+'.html');\n        xmlHttpObject.onreadystatechange = htmlHandleContent;\n        xmlHttpObject.send(null);\n        return false;\n    }\n\n    function resizeAll() {\n      var leftWindow = document.getElementById('leftWindow');\n      var leftWindowContent = document.getElementById('leftWindowContent');\n      var rightWindow = document.getElementById('rightWindow');\n      var rightWindowContent = document.getElementById('rightWindowContent');\n      var bottomWindow = document.getElementById('bottomWindow');\n      var bottomWindowContent = document.getElementById('bottomWindowContent');\n      var codeWindow = document.getElementById('codeWindow');\n      var codeWindowContent = document.getElementById('codeWindowContent');\n\n      rightWindow.style.display = 'none';\n\n      var codeWindowTop = 35;\n      var leftWindowWidth = 300;\n      var rightWindowWidth = 250;\n      if (rightWindow.style.display == 'none') rightWindowWidth = 0;\n      var bottomWindowHeight = 130;\n      if (bottomWindow.style.display == 'none') bottomWindowHeight = 0;\n      var bottomWindowTop = (window.innerHeight - bottomWindowHeight - 35);\n      var codeWindowHeight = bottomWindowTop - codeWindowTop - 35;\n      var codeWindowWidth = (window.innerWidth - (leftWindowWidth + rightWindowWidth + 2 + 2 + 10 + 10 + 10 + 10));\n\n      leftWindow.style.top = codeWindowTop + 'px';\n      leftWindow.style.left = '10px';\n      leftWindowContent.style.width = leftWindowWidth + 'px';\n      leftWindowContent.style.height = codeWindowHeight + 'px';\n\n      rightWindow.style.top = codeWindowTop + 'px';\n      rightWindow.style.left = (window.innerWidth - rightWindowWidth - 2 - 10) + 'px';\n      rightWindowContent.style.width = rightWindowWidth + 'px';\n      rightWindowContent.style.height = codeWindowHeight + 'px';\n\n      bottomWindow.style.top = bottomWindowTop + 'px';\n      bottomWindow.style.left = '10px';\n      bottomWindowContent.style.width = (window.innerWidth - 20) + 'px';\n      bottomWindowContent.style.height = bottomWindowHeight + 'px';\n\n      codeWindow.style.top = codeWindowTop + 'px';\n      codeWindow.style.left = (leftWindowWidth + 2 + 10 + 10) + 'px';\n      codeWindowContent.style.width = codeWindowWidth + 'px';\n      codeWindowContent.style.height = codeWindowHeight + 'px';\n    }\n\n    function onLoad() {\n      resizeAll();\n      window.onresize = resizeAll;\n    }\n\n    function MakeLineVisible(i) {\n      var el;\n      el = document.getElementById('analysis_line' + lineSelected);\n      if (el != null) el.style.display = 'none';\n      \n      document.getElementById('analysis_line' + i).style.display = '';\n      if (lineSelected != 0) {\n        if ((lineSelected % 2) == 0) document.getElementById('line'+lineSelected).style.background = '#F0F0F0';\n        if ((lineSelected % 2) == 1) document.getElementById('line'+lineSelected).style.background = '#F8F8F8';\n        lineSelected = 0;\n      }\n      if (i != 0) {\n        lineSelected = i;\n        document.getElementById('line'+lineSelected).style.background = '#FFFFD8';        \n      }\n\n    }\n\n    function showLine(i) {\n      var remainder = i % 1000;\n      var reqPage = ( i - remainder ) / 1000;\n\n      if (reqPage != loadedPage) {\n        requestedLine = i;\n        htmlLoadContent(reqPage);\n        loadedPage = reqPage;\n      }\n      else {\n        MakeLineVisible(i);\n      }\n    }\n\n    function showFunctionInfo(i) {\n      var el;\n      el = document.getElementById('function_info' + functionSelected);\n      if (el != null) el.style.display = 'none';\n      document.getElementById('function_info' + i).style.display = '';\n      functionSelected = i;\n    }\n\n    function changeContentVisibility(e) {\n      if (e.parentNode.childNodes[1].style.display == 'none') {\n        e.parentNode.childNodes[1].style.display = '';\n        e.firstChild.nodeValue = '-' + e.firstChild.nodeValue.substr(1, e.firstChild.nodeValue.length);\n      }\n      else {\n        e.parentNode.childNodes[1].style.display = 'none';\n        e.firstChild.nodeValue = '+' + e.firstChild.nodeValue.substr(1, e.firstChild.nodeValue.length);\n      }\n    }\n\n    function hideWindow(windowName) {\n      document.getElementById(windowName).style.display = 'none';\n      resizeAll();\n    }\n  </script>\n</head>\n\n<body onload=\"onLoad();\">\n\n  <div style=\"border-bottom: 1px solid #808080;\">\n    <div style=\"border-bottom: 1px solid #000000; color: #5060C0; background-color: #F0F0F0; font-size: 16px; padding: 2px; font-weight: bold;\">\n      Filename: %filename%\n    </div>\n   </div>\n\n   <noscript><span style=\"padding: 10px; font-size: 18px; border: 2px solid Red;\">Javascript is <b>not</b> enabled!</noscript>\n\n  <div id=\"leftWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Analysis</div>\n    <div id=\"leftWindowContent\" class=\"mywindow_content\">\n      \n      <div id=\"analysis_line0\">\n        No line selected\n      </div>\n\n      <div id=\"dynamicanalysis\">\n\n      </div>\n    </div>\n  </div>\n\n  <div id=\"codeWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Source code</div>\n    <div id=\"codeWindowContent\" class=\"mywindow_content\">\n\n";;
+let htmlTemp_BasePartOne = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<head>\n  <title>%filename%</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n\n  
+<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"></link>\n
+<script type=\"text/javascript\" src=\"script.js\"></script>\n
+</head>\n\n<body onload=\"onLoad();\">\n\n  <div style=\"border-bottom: 1px solid #808080;\">\n    <div style=\"border-bottom: 1px solid #000000; color: #5060C0; background-color: #F0F0F0; font-size: 16px; padding: 2px; font-weight: bold;\">\n      Filename: %filename%\n    </div>\n   </div>\n\n   <noscript><span style=\"padding: 10px; font-size: 18px; border: 2px solid Red;\">Javascript is <b>not</b> enabled!</noscript>\n\n  <div id=\"leftWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Analysis</div>\n    <div id=\"leftWindowContent\" class=\"mywindow_content\">\n      \n      <div id=\"analysis_line0\">\n        No line selected\n      </div>\n\n      <div id=\"dynamicanalysis\">\n\n      </div>\n    </div>\n  </div>\n\n  <div id=\"codeWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Source code</div>\n    <div id=\"codeWindowContent\" class=\"mywindow_content\">\n\n";;
 let htmlTemp_BasePartTwo = "      <div id=\"lastline\" class=\"linetype0\" style=\"border-top: 1px solid #C0C0C0;\"><pre></pre></div>\n    </div>\n  </div>\n\n  <div id=\"rightWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Empty <a style=\"text-decoration: none; color: #000080;\" href=\"javascript:hideWindow('rightWindow');\">[X]</a></div>\n    <div id=\"rightWindowContent\" class=\"mywindow_content\">\n      Currently no content\n    </div>\n  </div>\n\n  <div id=\"bottomWindow\" class=\"mywindow\">\n    <div class=\"mywindow_header\">Function info<a style=\"text-decoration: none; color: #000080;\" href=\"javascript:hideWindow('bottomWindow');\">[X]</a></div>\n    <div id=\"bottomWindowContent\" class=\"mywindow_content\">\n\n";;
 let htmlTemp_BasePartThree = "    </div>\n  </div>\n\n</body>\n</html>\n\n";;
 
@@ -143,7 +146,7 @@ let print_html chan xmlNode (file: Cil.file) =
 		let lineCount = ref 0 in
 
 		(* Create output file *)
-		let outputChannel = open_out (shortFilename^".html") in
+		let outputChannel = open_out (Filename.concat "result" (shortFilename^".html")) in
 
 		(* Write first html part *)
 		let firstPartA = Str.global_replace (Str.regexp_string "%filename%") lineFile htmlTemp_BasePartOne in
@@ -162,13 +165,14 @@ let print_html chan xmlNode (file: Cil.file) =
 		(* Write third part *)
 		fprintf outputChannel "%s" htmlTemp_BasePartThree;
 		close_out outputChannel;
-
+    
 		(* Create analysis data directory *)
-		try (Unix.mkdir (shortFilename^"_data") 0o777) with _ -> (); ;
+		let dirn = (Filename.concat "result" (shortFilename^"_data")) in
+    try (Unix.mkdir dirn 0o777) with _ -> (); ;
 
 		(* Create analysis files *)
 		let outlist = ref [] in
-		for i = 0 to (!lineCount / 1000) do outlist := !outlist @ [open_out (shortFilename^"_data/analysis"^(string_of_int i)^".html")] done;
+		for i = 0 to (!lineCount / 1000) do outlist := !outlist @ [open_out (dirn^"/analysis"^(string_of_int i)^".html")] done;
 
 		(* Return new fileList entry *)		
 		{filename = lineFile ; analysis_out = outlist}
